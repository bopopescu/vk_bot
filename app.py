import json

import mysql.connector
import requests
import vk_api
from flask import Flask
from vk_api.longpoll import VkLongPoll, VkEventType

app = Flask(__name__)

mydb = mysql.connector.connect(
    host='127.0.0.1',
    user='csn',
    passwd='4252',
    database='vk_bot'
)


def query_db(query):
    cursor = mydb.cursor()
    cursor.execute(query)
    res = cursor.fetchall()
    res = [i[0] if len(i) == 1 else i for i in res]
    return res


def insert_db(insert, value):
    cursor = mydb.cursor()
    cursor.execute(insert, value)
    mydb.commit()


api_key = '1639dc5f4da29d0eb1d289a6d511869e7986be516a4faf70d7da7b90ef7371b97d7a44c6f8a0a5183e266'
access_token = '486a446f486a446f486a446fab481aa93b4486a486a446f16e569472a84f996a20a18c5'

vk_session = vk_api.VkApi(token=api_key)
session_api = vk_session.get_api()
longpull = VkLongPoll(vk_session)
version = 5.103
owner_id = '-196641047'


def exec_api(method, params):
    init = {
        'access_token': access_token,
        'v': version,
        'owner_id': owner_id
    }
    init.update(params)

    return requests.get(f'https://api.vk.com/method/{method}', params=init).json()


def get_photo_id():
    photos = exec_api('photos.get', params={'album_id': '272028839'})['response']['items']
    photo_description = list()
    photo_ids = list()
    for item in photos:
        photo_description.append(str(item['text']))
    for item in photos:
        photo_ids.append('photo-' + str(str(item['owner_id']) + '_' + str(item['id']))[1:])
    return photo_ids, photo_description


def sender(usr_id, text, keyboard, photo):
    vk_session.method('messages.send',
                      {'user_id': usr_id, 'keyboard': keyboard, 'attachment': photo, 'message': text, 'random_id': 0})


def get_button(label, color, payload=''):
    return {
        "action": {
            "type": "text",
            "payload": json.dumps(payload),
            "label": label
        },
        'color': color
    }


keyboard_for_start = {
    'one_time': False,
    'buttons': [
        [
            get_button(label='–†–æ–∑—ã–≥—Ä—ã—à', color='primary'),
        ],
        [
            get_button(label='–ü—Ä–∞–≤–∏–ª–∞', color='negative'),
            get_button(label='–†–µ–∫–≤–∏–∑–∏—Ç—ã', color='positive'),
        ]
    ]
}

keyboard_for_start = json.dumps(keyboard_for_start, ensure_ascii=False).encode('utf-8')
keyboard_for_start = str(keyboard_for_start.decode('utf-8'))

keyboard_for_play = {
    'one_time': False,
    'buttons': [

        [
            get_button(label='–°–≤–æ–±–æ–¥–Ω—ã–µ –Ω–æ–º–µ—Ä–∫–∏', color='positive'),
            get_button(label='–ú–æ–∏ –Ω–æ–º–µ—Ä–∫–∏', color='primary'),
        ],
        [
            get_button(label='–ù–∞–∑–∞–¥', color='negative'),
        ]

    ]
}

keyboard_for_play = json.dumps(keyboard_for_play, ensure_ascii=False).encode('utf-8')
keyboard_for_play = str(keyboard_for_play.decode('utf-8'))

keyboard_for_event = {
    'one_time': False,
    'buttons': [
        [
            get_button(label='–ò–≥—Ä–∞—Ç—å', color='positive'),
        ],
        [
            get_button(label='–ß—Ç–æ —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è', color='positive'),
            get_button(label='–ö–∞–∫ –∑–∞–Ω—è—Ç—å –Ω–æ–º–µ—Ä–æ–∫?', color='primary'),
        ],
        [
            get_button(label='–ù–∞–∑–∞–¥', color='negative'),
        ],

    ]
}

keyboard_for_event = json.dumps(keyboard_for_event, ensure_ascii=False).encode('utf-8')
keyboard_for_event = str(keyboard_for_event.decode('utf-8'))

for event in longpull.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.to_me:

            msg = event.text.lower()
            user_id = event.user_id
            request_api = exec_api('users.get', params={'user_ids': user_id})['response'][0]
            username = request_api['first_name'] + ' ' + request_api['last_name']

            if msg == '–Ω–∞—á–∞—Ç—å':
                text_msg = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤—Ç—å!'
                sender(user_id, text_msg, keyboard_for_start, photo=None)

            elif msg == '–ø—Ä–∞–≤–∏–ª–∞':
                text_msg = open('description')
                sender(user_id, text_msg.read(), keyboard_for_start, photo=None)

            elif msg == '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã':
                text_msg = open('requisites')
                sender(user_id, text_msg.read(), keyboard_for_start, photo=None)

            elif msg == '—Ä–æ–∑—ã–≥—Ä—ã—à':
                text_msg = 'üî•–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–∞–ª–æ–Ω—á–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—åüëáüèª'
                sender(user_id, text_msg, keyboard_for_event, photo=None)

            elif msg == '–Ω–∞–∑–∞–¥':
                text_msg = '–û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'
                sender(user_id, text_msg, keyboard_for_start, photo=None)

            elif msg == '—á—Ç–æ —Ä–∞–∑—ã–≥—Ä—ã–≤–∞–µ—Ç—Å—è':
                text_msg = get_photo_id()[1]
                text_msg = '\n\n'.join(text_msg)
                photo_id = get_photo_id()[0]
                photo_id = ','.join(photo_id)
                sender(user_id, text_msg, keyboard_for_event, photo_id)

            elif msg == '–∫–∞–∫ –∑–∞–Ω—è—Ç—å –Ω–æ–º–µ—Ä–æ–∫?':
                text_msg = '‚úÖ–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–Ω—è—Ç—å —Ç–∞–ª–æ–Ω—á–∏–∫, –ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –Ω–æ–º–µ—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª–∏. \n\n' \
                           '‚Äº–û–ß–ï–ù–¨ –í–ê–ñ–ù–û‚Äº \n\n' \
                           '–ù–µ –Ω–∞–¥–æ –ø–∏—Å—Ç—å –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–∫–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ! \n\n' \
                           '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø–∏—à–∏—Ç–µ –∫–∞–∂–¥—ã–π –Ω–æ–º–µ—Ä–æ–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏'
                sender(user_id, text_msg, keyboard_for_event, photo=None)

            elif msg == '–∏–≥—Ä–∞—Ç—å':
                text_msg = '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–Ω—è—Ç—å —Ç–∞–ª–æ–Ω—á–∏–∫, –ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –Ω–æ–º–µ—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª–∏.'
                sender(user_id, text_msg, keyboard_for_play, photo=None)

            elif msg == '—Å–≤–æ–±–æ–¥–Ω—ã–µ –Ω–æ–º–µ—Ä–∫–∏':
                all_number = query_db(f'SELECT number FROM play')
                result = [int(item) + int(0) for item in all_number]
                user_list = list()
                for item in range(1, 41):
                    user_list.append(item)
                for item in result:
                    user_list.remove(item)

                result = [str(item) for item in user_list]
                result = ' '.join(result)
                text_msg = f'üí¶–°–≤–æ–±–æ–¥–Ω—ã–µ \n\n {result}'
                sender(user_id, text_msg, keyboard_for_play, photo=None)

            elif msg == '–º–æ–∏ –Ω–æ–º–µ—Ä–∫–∏':
                user_numbers = query_db(f'SELECT number FROM play WHERE name="{username}"')
                list_user_number = list()
                for number in user_numbers:
                    list_user_number.append(number)

                result = [str(item) for item in list_user_number]
                result = ' '.join(result)
                if result is None:
                    text_msg = 'üö´–í—ã –Ω–µ –∑–∞–Ω–∏–º–∞–ª–∏ —Ç–∞–ª–æ–Ω—á–∏–∫–∏!'
                    sender(user_id, text_msg, keyboard_for_play, photo=None)
                else:
                    text_msg = f'üî•–ù–æ–º–µ—Ä–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∑–∞–Ω—è–ª–∏: \n\n {result}'
                    sender(user_id, text_msg, keyboard_for_play, photo=None)

            elif len(msg) <= 2:
                number = int(msg)
                if number < 1:
                    text_msg = 'üö´–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!'
                    sender(user_id, text_msg, keyboard_for_play, photo=None)
                elif number > 40:
                    text_msg = 'üö´–í–∞—à–µ —á–∏—Å–ª–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–ª–æ–Ω—á–∏–∫–æ–≤!'
                    sender(user_id, text_msg, keyboard_for_play, photo=None)
                else:
                    username = exec_api('users.get', params={'user_ids': user_id})['response'][0]
                    username = username['first_name'] + ' ' + username['last_name']
                    review = query_db(f'SELECT number FROM play WHERE number={number}')
                    if review:
                        text_msg = 'üö´–î–∞–Ω–Ω—ã–π —Ç–∞–ª–æ–Ω—á–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç!'
                        sender(user_id, text_msg, keyboard_for_play, photo=None)
                    else:
                        text_msg = f'‚úÖ–í—ã –∑–∞–Ω—è–ª–∏ —Ç–∞–ª–æ–Ω—á–∏–∫ ‚Ññ{number}'
                        insert_db('INSERT INTO play (number, name) VALUE (%s, %s)', (number, username))
                        sender(user_id, text_msg, keyboard_for_play, photo=None)

            else:
                text_msg = '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≤—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –≤–µ—Ä–Ω–æ. \n\n ' \
                           '–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤ –∏–≥—Ä–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç –≤—Å–µ–≥–æ 40 —Ç–∞–ª–æ–Ω—á–∏–∫–æ–≤üî• \n\n' \
                           '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–æ—Ç–∞ –∏ –≤–Ω–∏–º–∞—å–µ–ª—å–Ω–æ —á–∏—Ç–∞–π—Ç–µ –∏–Ω—Ñ—Ä–º–∞—Ü–∏—é'
                sender(user_id, text_msg, keyboard_for_event, photo=None)

if __name__ == '__main__':
    app.run()
